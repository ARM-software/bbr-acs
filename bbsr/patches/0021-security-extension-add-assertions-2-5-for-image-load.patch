From af396609f97204b710444cb00f528d36f5196be9 Mon Sep 17 00:00:00 2001
From: Stuart Yoder <stuart.yoder@arm.com>
Date: Mon, 19 Jul 2021 10:07:35 -0500
Subject: [PATCH 21/22] security-extension: add assertions 2-5 for image load
 test

Signed-off-by: Stuart Yoder <stuart.yoder@arm.com>
---
 .../BlackBoxTest/ImageLoadingBBTest.c         | 153 +++++++++++++++++-
 1 file changed, 151 insertions(+), 2 deletions(-)

diff --git a/uefi-sct/SctPkg/TestCase/UEFI/EFI/RuntimeServices/SecureBoot/BlackBoxTest/ImageLoadingBBTest.c b/uefi-sct/SctPkg/TestCase/UEFI/EFI/RuntimeServices/SecureBoot/BlackBoxTest/ImageLoadingBBTest.c
index 44589fcd..e0493f8a 100644
--- a/uefi-sct/SctPkg/TestCase/UEFI/EFI/RuntimeServices/SecureBoot/BlackBoxTest/ImageLoadingBBTest.c
+++ b/uefi-sct/SctPkg/TestCase/UEFI/EFI/RuntimeServices/SecureBoot/BlackBoxTest/ImageLoadingBBTest.c
@@ -480,8 +480,6 @@ ImageLoadingTestCheckpoint1 (
                      &ImageHandle
                      );
 
-  SctPrint(L"status = %x\n", Status);
-
   // As per UEFI spec, valid return codes for EFI_BOOT_SERVICES.LoadImage()
   // for signature check failures are security violation or access denied.
   if (Status == EFI_SECURITY_VIOLATION) {
@@ -503,6 +501,157 @@ ImageLoadingTestCheckpoint1 (
                  Status
                  );
 
+  //
+  //  Test assertion 2: Verify loading signed image, but not in db. Load image (TestImage2)
+  //  with signature matching no keys in DBSigList2.  Expect result: SECURITY_VIOLATION or
+  //  access denied.
+  //
+
+  FileName = L"TestImage2.bin";
+  EntireFileName = SctPoolPrint (L"%s\\%s", gFilePath, FileName);
+  FilePath = SctFileDevicePath (gDeviceHandle, EntireFileName);
+  SctFreePool (EntireFileName);
+
+  ImageHandle = NULL;
+  Status = gtBS->LoadImage (
+                     FALSE,
+                     gImageHandle,
+                     FilePath,
+                     NULL,
+                     0,
+                     &ImageHandle
+                     );
+
+  if (Status == EFI_SECURITY_VIOLATION) {
+    Result = EFI_TEST_ASSERTION_PASSED;
+  } else if (Status == EFI_ACCESS_DENIED && ImageHandle == NULL) {
+    Result = EFI_TEST_ASSERTION_PASSED;
+  } else {
+    Result = EFI_TEST_ASSERTION_FAILED;
+  }
+
+  StandardLib->RecordAssertion (
+                 StandardLib,
+                 Result,
+                 gSecureBootImageLoadingBbTestAssertionGuid002,
+                 L"SecureBoot - Verify load of signed image, but not in db.",
+                 L"%a:%d:Status - %r",
+                 __FILE__,
+                 (UINTN)__LINE__,
+                 Status
+                 );
+
+  //
+  //  Test assertion 3: Verify signed image with first signature in list.  Load image
+  //   (TestImage3) signed with first certificate in DBSigList2.  Expected result: SUCCESS.
+  //
+
+  FileName = L"TestImage3.bin";
+  EntireFileName = SctPoolPrint (L"%s\\%s", gFilePath, FileName);
+  FilePath = SctFileDevicePath (gDeviceHandle, EntireFileName);
+  SctFreePool (EntireFileName);
+
+  ImageHandle = NULL;
+  Status = gtBS->LoadImage (
+                     FALSE,
+                     gImageHandle,
+                     FilePath,
+                     NULL,
+                     0,
+                     &ImageHandle
+                     );
+
+  if (Status == EFI_SUCCESS) {
+    Result = EFI_TEST_ASSERTION_PASSED;
+  } else {
+    Result = EFI_TEST_ASSERTION_FAILED;
+  }
+
+  StandardLib->RecordAssertion (
+                 StandardLib,
+                 Result,
+                 gSecureBootImageLoadingBbTestAssertionGuid003,
+                 L"SecureBoot - Verify load of signed image, first signature in list.",
+                 L"%a:%d:Status - %r",
+                 __FILE__,
+                 (UINTN)__LINE__,
+                 Status
+                 );
+
+  //
+  //  Test assertion 4: Verify signed image with 2nd signature in list.  Load image (TestImage4)
+  //   signed with second certificate in DBSigList2.  Expected result: SUCCESS.
+  //
+
+  FileName = L"TestImage4.bin";
+  EntireFileName = SctPoolPrint (L"%s\\%s", gFilePath, FileName);
+  FilePath = SctFileDevicePath (gDeviceHandle, EntireFileName);
+  SctFreePool (EntireFileName);
+
+  ImageHandle = NULL;
+  Status = gtBS->LoadImage (
+                     FALSE,
+                     gImageHandle,
+                     FilePath,
+                     NULL,
+                     0,
+                     &ImageHandle
+                     );
+
+  if (Status == EFI_SUCCESS) {
+    Result = EFI_TEST_ASSERTION_PASSED;
+  } else {
+    Result = EFI_TEST_ASSERTION_FAILED;
+  }
+
+  StandardLib->RecordAssertion (
+                 StandardLib,
+                 Result,
+                 gSecureBootImageLoadingBbTestAssertionGuid004,
+                 L"SecureBoot - Verify load of signed image, second signature in list.",
+                 L"%a:%d:Status - %r",
+                 __FILE__,
+                 (UINTN)__LINE__,
+                 Status
+                 );
+
+  //
+  //  Test assertion 5: Verify unsigned image with hash in DB.  Load unsigned image (TestImage5)
+  //   with SHA256 hash in DBSigList2.  Expected result: SUCCESS
+  //
+
+  FileName = L"TestImage5.bin";
+  EntireFileName = SctPoolPrint (L"%s\\%s", gFilePath, FileName);
+  FilePath = SctFileDevicePath (gDeviceHandle, EntireFileName);
+  SctFreePool (EntireFileName);
+
+  ImageHandle = NULL;
+  Status = gtBS->LoadImage (
+                     FALSE,
+                     gImageHandle,
+                     FilePath,
+                     NULL,
+                     0,
+                     &ImageHandle
+                     );
+
+  if (Status == EFI_SUCCESS) {
+    Result = EFI_TEST_ASSERTION_PASSED;
+  } else {
+    Result = EFI_TEST_ASSERTION_FAILED;
+  }
+
+  StandardLib->RecordAssertion (
+                 StandardLib,
+                 Result,
+                 gSecureBootImageLoadingBbTestAssertionGuid005,
+                 L"SecureBoot - Verify load of unsigned image with hash in list.",
+                 L"%a:%d:Status - %r",
+                 __FILE__,
+                 (UINTN)__LINE__,
+                 Status
+                 );
+
   //
   // Trace ...
   //
-- 
2.17.1

